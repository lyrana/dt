# Make the Python module called dolfin_cpp

# dolfin_cpp: dolfin_cpp.cpython-36m-x86_64-linux-gnu.so

dolfin_cpp.cpython-36m-x86_64-linux-gnu.so: dolfin_cpp.cpp predicates.o dolfin.o
	c++ -O3 -Wall -shared -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` dolfin_cpp.cpp -o dolfin_cpp`python3-config --extension-suffix` predicates.o dolfin.o

# Compile the source files

dolfin.o: dolfin.cpp dolfin.h predicates.h
	c++ -c -O3 -Wall -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` dolfin.cpp -o dolfin.o

predicates.o: predicates.cpp predicates.h
	c++ -c -O3 -Wall -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` predicates.cpp -o predicates.o

#SegmentedArrayPair_Cpp.o: SegmentedArrayPair_Cpp.cpp SegmentedArrayPair_Cpp.h pstruct.h
#	c++ -c -O3 -Wall -std=c++11 -fPIC -fvisibility=hidden `python3 -m pybind11 --includes` SegmentedArrayPair_Cpp.cpp -o SegmentedArrayPair_Cpp.o

#test_segmented_arrays: test_segmented_arrays.cpp SegmentedArrayPair_Cpp.cpp
#	c++ -O0 -g -Wall -std=c++11 -fPIC -fvisibility=hidden `python3-config --cflags` test_segmented_arrays.cpp -o test_segmented_arrays `python3-config --ldflags`

clean:
	/bin/rm *.o dolfin_cpp`python3-config --extension-suffix`
