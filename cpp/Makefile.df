# Make the Python module called dolfin_functions_solib

THE_MODULE_PREFIX = dolfin_functions_

# This specifies the particle spatial coordinate system:
THE_PARTICLE_TYPE = cartesian_xyz

THE_MODULE_NAME = $(THE_MODULE_PREFIX)$(THE_PARTICLE_TYPE)_solib

# dolfin_functions_cpp: dolfin_functions_cpp.cpython-36m-x86_64-linux-gnu.so
DFLAGS = -DPARTICLE_TYPE=$(THE_PARTICLE_TYPE) -DMODULE_NAME=$(THE_MODULE_NAME)

$(THE_MODULE_NAME)`python3-config --extension-suffix`: dolfin_functions_solib.cpp predicates.o MeshEntityArrays.o dolfin_functions.o
	c++ $(DFLAGS) -O3 -Wall -shared -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` dolfin_functions_solib.cpp -o $(THE_MODULE_NAME)`python3-config --extension-suffix` predicates.o MeshEntityArrays.o dolfin_functions.o

# Compile the source files

dolfin_functions.o: dolfin_functions.cpp MeshEntityArrays.h dolfin_functions.h predicates.h
	c++ -c -O3 -Wall -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` dolfin_functions.cpp -o dolfin_functions.o

#Fstruct.o: Fstruct.cpp Fstruct.h
#	c++ -c -O3 -Wall -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` Fstruct.cpp -o Fstruct.o

predicates.o: predicates.cpp predicates.h
	c++ -c -O3 -Wall -std=c++11 -fPIC -fvisibility=hidden -I/usr/include/eigen3 `python3 -m pybind11 --includes` predicates.cpp -o predicates.o

MeshEntityArrays.o: MeshEntityArrays.h MeshEntityArrays.cpp
	@echo "*Run Makefile.mea first*"
	@/bin/false

clean:
	/bin/rm Fstruct.o predicates.o MeshEntityArrays.o dolfin_functions.o $(THE_MODULE_NAME)`python3-config --extension-suffix`
